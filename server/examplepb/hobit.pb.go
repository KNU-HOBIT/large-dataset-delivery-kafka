// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: hobit.proto

package examplepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Transport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        *int32   `protobuf:"varint,1,req,name=index" json:"index,omitempty"`
	BlkNo        *string  `protobuf:"bytes,2,req,name=blk_no,json=blkNo" json:"blk_no,omitempty"`
	Press3       *int32   `protobuf:"varint,3,req,name=press3" json:"press3,omitempty"`
	CalcPress2   *float64 `protobuf:"fixed64,4,req,name=calc_press2,json=calcPress2" json:"calc_press2,omitempty"`
	Press4       *int32   `protobuf:"varint,5,req,name=press4" json:"press4,omitempty"`
	CalcPress1   *float64 `protobuf:"fixed64,6,req,name=calc_press1,json=calcPress1" json:"calc_press1,omitempty"`
	CalcPress4   *float64 `protobuf:"fixed64,7,req,name=calc_press4,json=calcPress4" json:"calc_press4,omitempty"`
	CalcPress3   *float64 `protobuf:"fixed64,8,req,name=calc_press3,json=calcPress3" json:"calc_press3,omitempty"`
	BfGpsLon     *float64 `protobuf:"fixed64,9,req,name=bf_gps_lon,json=bfGpsLon" json:"bf_gps_lon,omitempty"`
	GpsLat       *float64 `protobuf:"fixed64,10,req,name=gps_lat,json=gpsLat" json:"gps_lat,omitempty"`
	Speed        *float64 `protobuf:"fixed64,11,req,name=speed" json:"speed,omitempty"`
	InDt         *string  `protobuf:"bytes,12,req,name=in_dt,json=inDt" json:"in_dt,omitempty"`
	MoveTime     *float64 `protobuf:"fixed64,13,req,name=move_time,json=moveTime" json:"move_time,omitempty"`
	DvcId        *string  `protobuf:"bytes,14,req,name=dvc_id,json=dvcId" json:"dvc_id,omitempty"`
	DsmeLat      *float64 `protobuf:"fixed64,15,req,name=dsme_lat,json=dsmeLat" json:"dsme_lat,omitempty"`
	Press1       *int32   `protobuf:"varint,16,req,name=press1" json:"press1,omitempty"`
	Press2       *int32   `protobuf:"varint,17,req,name=press2" json:"press2,omitempty"`
	WorkStatus   *int32   `protobuf:"varint,18,req,name=work_status,json=workStatus" json:"work_status,omitempty"`
	Timestamp    *string  `protobuf:"bytes,19,req,name=timestamp" json:"timestamp,omitempty"`
	IsAdjust     *string  `protobuf:"bytes,20,req,name=is_adjust,json=isAdjust" json:"is_adjust,omitempty"`
	MoveDistance *int32   `protobuf:"varint,21,req,name=move_distance,json=moveDistance" json:"move_distance,omitempty"`
	Weight       *float64 `protobuf:"fixed64,22,req,name=weight" json:"weight,omitempty"`
	DsmeLon      *float64 `protobuf:"fixed64,23,req,name=dsme_lon,json=dsmeLon" json:"dsme_lon,omitempty"`
	InUser       *string  `protobuf:"bytes,24,req,name=in_user,json=inUser" json:"in_user,omitempty"`
	EqpId        *int32   `protobuf:"varint,25,req,name=eqp_id,json=eqpId" json:"eqp_id,omitempty"`
	BlkGetSeqId  *int32   `protobuf:"varint,26,req,name=blk_get_seq_id,json=blkGetSeqId" json:"blk_get_seq_id,omitempty"`
	LotNo        *string  `protobuf:"bytes,27,req,name=lot_no,json=lotNo" json:"lot_no,omitempty"`
	ProjNo       *string  `protobuf:"bytes,28,req,name=proj_no,json=projNo" json:"proj_no,omitempty"`
	GpsLon       *float64 `protobuf:"fixed64,29,req,name=gps_lon,json=gpsLon" json:"gps_lon,omitempty"`
	SeqId        *int32   `protobuf:"varint,30,req,name=seq_id,json=seqId" json:"seq_id,omitempty"`
	BfGpsLat     *float64 `protobuf:"fixed64,32,req,name=bf_gps_lat,json=bfGpsLat" json:"bf_gps_lat,omitempty"`
	BlkDvcId     *string  `protobuf:"bytes,33,req,name=blk_dvc_id,json=blkDvcId" json:"blk_dvc_id,omitempty"`
}

func (x *Transport) Reset() {
	*x = Transport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hobit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transport) ProtoMessage() {}

func (x *Transport) ProtoReflect() protoreflect.Message {
	mi := &file_hobit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transport.ProtoReflect.Descriptor instead.
func (*Transport) Descriptor() ([]byte, []int) {
	return file_hobit_proto_rawDescGZIP(), []int{0}
}

func (x *Transport) GetIndex() int32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *Transport) GetBlkNo() string {
	if x != nil && x.BlkNo != nil {
		return *x.BlkNo
	}
	return ""
}

func (x *Transport) GetPress3() int32 {
	if x != nil && x.Press3 != nil {
		return *x.Press3
	}
	return 0
}

func (x *Transport) GetCalcPress2() float64 {
	if x != nil && x.CalcPress2 != nil {
		return *x.CalcPress2
	}
	return 0
}

func (x *Transport) GetPress4() int32 {
	if x != nil && x.Press4 != nil {
		return *x.Press4
	}
	return 0
}

func (x *Transport) GetCalcPress1() float64 {
	if x != nil && x.CalcPress1 != nil {
		return *x.CalcPress1
	}
	return 0
}

func (x *Transport) GetCalcPress4() float64 {
	if x != nil && x.CalcPress4 != nil {
		return *x.CalcPress4
	}
	return 0
}

func (x *Transport) GetCalcPress3() float64 {
	if x != nil && x.CalcPress3 != nil {
		return *x.CalcPress3
	}
	return 0
}

func (x *Transport) GetBfGpsLon() float64 {
	if x != nil && x.BfGpsLon != nil {
		return *x.BfGpsLon
	}
	return 0
}

func (x *Transport) GetGpsLat() float64 {
	if x != nil && x.GpsLat != nil {
		return *x.GpsLat
	}
	return 0
}

func (x *Transport) GetSpeed() float64 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *Transport) GetInDt() string {
	if x != nil && x.InDt != nil {
		return *x.InDt
	}
	return ""
}

func (x *Transport) GetMoveTime() float64 {
	if x != nil && x.MoveTime != nil {
		return *x.MoveTime
	}
	return 0
}

func (x *Transport) GetDvcId() string {
	if x != nil && x.DvcId != nil {
		return *x.DvcId
	}
	return ""
}

func (x *Transport) GetDsmeLat() float64 {
	if x != nil && x.DsmeLat != nil {
		return *x.DsmeLat
	}
	return 0
}

func (x *Transport) GetPress1() int32 {
	if x != nil && x.Press1 != nil {
		return *x.Press1
	}
	return 0
}

func (x *Transport) GetPress2() int32 {
	if x != nil && x.Press2 != nil {
		return *x.Press2
	}
	return 0
}

func (x *Transport) GetWorkStatus() int32 {
	if x != nil && x.WorkStatus != nil {
		return *x.WorkStatus
	}
	return 0
}

func (x *Transport) GetTimestamp() string {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return ""
}

func (x *Transport) GetIsAdjust() string {
	if x != nil && x.IsAdjust != nil {
		return *x.IsAdjust
	}
	return ""
}

func (x *Transport) GetMoveDistance() int32 {
	if x != nil && x.MoveDistance != nil {
		return *x.MoveDistance
	}
	return 0
}

func (x *Transport) GetWeight() float64 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *Transport) GetDsmeLon() float64 {
	if x != nil && x.DsmeLon != nil {
		return *x.DsmeLon
	}
	return 0
}

func (x *Transport) GetInUser() string {
	if x != nil && x.InUser != nil {
		return *x.InUser
	}
	return ""
}

func (x *Transport) GetEqpId() int32 {
	if x != nil && x.EqpId != nil {
		return *x.EqpId
	}
	return 0
}

func (x *Transport) GetBlkGetSeqId() int32 {
	if x != nil && x.BlkGetSeqId != nil {
		return *x.BlkGetSeqId
	}
	return 0
}

func (x *Transport) GetLotNo() string {
	if x != nil && x.LotNo != nil {
		return *x.LotNo
	}
	return ""
}

func (x *Transport) GetProjNo() string {
	if x != nil && x.ProjNo != nil {
		return *x.ProjNo
	}
	return ""
}

func (x *Transport) GetGpsLon() float64 {
	if x != nil && x.GpsLon != nil {
		return *x.GpsLon
	}
	return 0
}

func (x *Transport) GetSeqId() int32 {
	if x != nil && x.SeqId != nil {
		return *x.SeqId
	}
	return 0
}

func (x *Transport) GetBfGpsLat() float64 {
	if x != nil && x.BfGpsLat != nil {
		return *x.BfGpsLat
	}
	return 0
}

func (x *Transport) GetBlkDvcId() string {
	if x != nil && x.BlkDvcId != nil {
		return *x.BlkDvcId
	}
	return ""
}

var File_hobit_proto protoreflect.FileDescriptor

var file_hobit_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x68, 0x6f, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x06,
	0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6c, 0x6b, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x05, 0x62, 0x6c, 0x6b, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x33, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x63, 0x50, 0x72, 0x65, 0x73, 0x73,
	0x32, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x73, 0x34, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x73, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c,
	0x63, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x06, 0x20, 0x02, 0x28, 0x01, 0x52, 0x0a,
	0x63, 0x61, 0x6c, 0x63, 0x50, 0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x6c, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x34, 0x18, 0x07, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x0a, 0x63, 0x61, 0x6c, 0x63, 0x50, 0x72, 0x65, 0x73, 0x73, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6c, 0x63, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x33, 0x18, 0x08, 0x20, 0x02, 0x28, 0x01,
	0x52, 0x0a, 0x63, 0x61, 0x6c, 0x63, 0x50, 0x72, 0x65, 0x73, 0x73, 0x33, 0x12, 0x1c, 0x0a, 0x0a,
	0x62, 0x66, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x6c, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x02, 0x28, 0x01,
	0x52, 0x08, 0x62, 0x66, 0x47, 0x70, 0x73, 0x4c, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x70,
	0x73, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06, 0x67, 0x70, 0x73,
	0x4c, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x02,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x6e, 0x5f,
	0x64, 0x74, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x44, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x02, 0x28,
	0x01, 0x52, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x64,
	0x76, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x64, 0x76, 0x63,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x0f,
	0x20, 0x02, 0x28, 0x01, 0x52, 0x07, 0x64, 0x73, 0x6d, 0x65, 0x4c, 0x61, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x73, 0x73, 0x31, 0x18, 0x10, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x18,
	0x11, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x70, 0x72, 0x65, 0x73, 0x73, 0x32, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x13, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x18, 0x14, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x15, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0c, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x16, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x6d, 0x65, 0x5f, 0x6c,
	0x6f, 0x6e, 0x18, 0x17, 0x20, 0x02, 0x28, 0x01, 0x52, 0x07, 0x64, 0x73, 0x6d, 0x65, 0x4c, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x18, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x71,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x65, 0x71, 0x70, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0e, 0x62, 0x6c, 0x6b, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x71,
	0x5f, 0x69, 0x64, 0x18, 0x1a, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6c, 0x6b, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x6f,
	0x18, 0x1b, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x74, 0x4e, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x5f, 0x6e, 0x6f, 0x18, 0x1c, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x6a, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x70, 0x73, 0x5f, 0x6c, 0x6f,
	0x6e, 0x18, 0x1d, 0x20, 0x02, 0x28, 0x01, 0x52, 0x06, 0x67, 0x70, 0x73, 0x4c, 0x6f, 0x6e, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x66, 0x5f, 0x67, 0x70, 0x73,
	0x5f, 0x6c, 0x61, 0x74, 0x18, 0x20, 0x20, 0x02, 0x28, 0x01, 0x52, 0x08, 0x62, 0x66, 0x47, 0x70,
	0x73, 0x4c, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x62, 0x6c, 0x6b, 0x5f, 0x64, 0x76, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x21, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6b, 0x44, 0x76, 0x63,
	0x49, 0x64, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x70, 0x62,
}

var (
	file_hobit_proto_rawDescOnce sync.Once
	file_hobit_proto_rawDescData = file_hobit_proto_rawDesc
)

func file_hobit_proto_rawDescGZIP() []byte {
	file_hobit_proto_rawDescOnce.Do(func() {
		file_hobit_proto_rawDescData = protoimpl.X.CompressGZIP(file_hobit_proto_rawDescData)
	})
	return file_hobit_proto_rawDescData
}

var file_hobit_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_hobit_proto_goTypes = []interface{}{
	(*Transport)(nil), // 0: Transport
}
var file_hobit_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hobit_proto_init() }
func file_hobit_proto_init() {
	if File_hobit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hobit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hobit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hobit_proto_goTypes,
		DependencyIndexes: file_hobit_proto_depIdxs,
		MessageInfos:      file_hobit_proto_msgTypes,
	}.Build()
	File_hobit_proto = out.File
	file_hobit_proto_rawDesc = nil
	file_hobit_proto_goTypes = nil
	file_hobit_proto_depIdxs = nil
}
